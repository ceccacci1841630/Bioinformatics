def insertion_sort(l):
    swaps= 0
    for i in range(1, len(l)):
        j = i 
        while j > 0 and l[j-1] > l[j]:
            l[j], l[j-1] = l[j -1], l[j]
            j -= 1 
            swaps += 1
    return swaps
s = "6426 -97403 -24013 -40701 -27912 -2960 -80403 -28865 52998 88520 7803 -69737 17880 -77606 41646 75693 1982 -26757 -13805 11899 -69046 81504 -51116 -17506 53057 -6862 665 -79639 37991 1432 -92549 -93731 67105 76166 76244 -10487 81215 -38786 26244 56417 2109 -55274 -96917 -70877 -56418 48102 -42028 4188 88977 -82890 -68291 75399 -23219 -8589 -61530 2387 21531 -11376 59641 -66280 85646 -960 25161 -8295 74628 -43640 30681 62647 -57523 18355 86803 8804 6390 87061 -51632 -82044 62509 -39843 -60832 -17234 -22709 -46253 56500 -728 69118 96485 -7629 -36956 168 19120 46078 53626 -15221 79973 33597 -27134 36438 -27281 -41427 -71644 -36431 20434 97899 -49816 -43646 5554 3270 23884 -1108 24196 -30142 -82212 -75691 74077 -79156 76106 -14112 -94278 88098 -6152 30321 93735 -70687 -92278 10180 -70343 90240 -79307 -93364 -84848 10856 -2381 -99347 -78217 -78470 -37899 -87623 -66433 30467 26160 -57252 4348 -45337 79758 -74844 -15221 57386 82147 3150 -93947 -57858 12672 28612 -88279 -32749 26902 34674 -90725 -81916 -47144 -98945 78908 86455 -58244 -68974 -12085 -15932 42545 47785 94016 30168 -94652 -67463 84017 30536 75896 59877 -38727 91946 -40896 57217 -36238 54764 -80182 -94203 564 -62025 66758 43401 -35744 44815 89202 -18262 74616 18935 59128 -90315 -83484 9679 91668 -11095 26737 89859 -22350 51752 48531 -47177 -94175 -61062 40607 74796 9498 45817 82089 -27308 42107 89554 77422 95706 -87123 -38235 21451 -64171 58998 -60190 -67423 -75591 47329 -53583 4392 -14681 6676 6206 -34651 -69191 -89378 -75910 -35509 284 -31144 -61448 -93342 -5624 -85242 34070 -70461 -30794 2386 55638 -86693 48639 92777 80283 78421 47564 74533 -8628 -59984 88720 -59464 -34649 36726 -48809 -46992 -10890 -41661 23193 -64827 5745 92853 80086 -36943 -46893 72957 37724 78938 -68542 -25490 -29275 78034 -83051 -79414 -17963 -75489 32813 81121 -47863 -36169 7619 13261 47632 -21463 -16161 72800 43330 9047 54388 -38210 -53376 29859 62688 -67527 -84885 12831 82162 -28849 -65300 -76244 45020 78870 -14286 -66134 340 -13129 -47126 17361 76446 -78026 52299 18817 -11053 -52670 -38004 60646 92141 41889 48875 -76695 -42890 -62551 72859 55594 -7180 77347 86988 29579 9469 74940 36870 60343 -29018 61618 43318 -94619 -34278 69826 -5978 47986 -66274 40773 98828 -28334 5399 -68619 -69815 -5061 40323 -73928 -6770 76213 62404 86221 79333 -45280 -51192 -38291 54429 97337 40615 89285 24165 7714 -43902 12032 70076 19541 -4460 40532 32813 42183 11979 -82418 -93015 48213 -51714 -23679 17262 7977 94037 52995 59031 -43473 44295 4856 61245 83837 12633 -28968 65062 -28932 94068 -48110 -23386 89183 -84505 -93134 66474 -68090 -81297 -39240 10364 43408 -34379 -82748 60803 -28045 -77789 -96046 -21497 -78149 -71969 51727 -30225 -7644 730 42224 -28332 -76825 -79286 -6633 -61961 -21267 -64075 51477 97106 -64459 45822 92401 -7673 -18901 -75108 -94055 -5420 64065 55919 90606 -53287 -77776 -48993 99141 -7941 92553 -6667 55044 -94982 -85975 -62047 72374 67303 -52055 897 -59632 81452 -86664 62539 -90797 -619 18880 -1703 -66510 -93762 56511 35842 51652 27845 20231 -27541 52201 -11509 1138 54722 77841 80391 76557 9762 71074 32358 -68152 -78622 51906 -30914 -49201 -88944 38238 -30903 14649 61502 -79371 -90397 -9320 -56653 15510 26789 30650 13504 -23039 2919 -78883 -56496 -22097 19459 14445 -31560 -75525 -29438 56075 41433 33483 91505 -57410 -97502 -16429 22478 -19993 -76525 2450 45647 -70721 87112 -5280 8263 47527 29395 87573 -7612 -90120 -45871 75074 24389 -87340 -59813 10507 23753 -18878 24926 26693 94504 -43339 86043 -39848 -13390 82505 -8622 -97717 -82817 5332 93731 96409 -65030 12137 -31800 14758 84745 39408 -18009 64998 71062 3199 -17364 63287 -94857 75517 56277 20078 -18953 756 27795 93174 -77207 86759 -43037 22948 60187 61898 24359 21300 93265 -62615 6994 -77970 -65685 59922 99800 -60466 -40964 10596 -44320 -59767 52447 15018 -93811 -92816 -42206 22385 -8340 26131 76731 49826 91656 17627 -24481 38439 40791 -898 -26291 -80782 -27542 -22741 -6374 20318 44085 -39339 26830 87813 -88454 -46010 -66923 -43869 -40382 19340 9752 24918 17189 34096 77799 -90784 -51929 -11022 -23441 -30261 31562 35267 -99995 46057 79277 -54299 16398 -12726 26583 8494 -33145 98484 -86779 -4035 38429 -73379 -21037 8280 -61354 -96976 2090 81926 -44115 7829 -57841 -65828 -4958 46002 -97318 41802 95683 -48115 -41298 83003 39217 68237 -3239 -81617 7532 -9004 65564 -66900 2640 303 -6303 3570 64333 -54516 -2262 73427 -83023 -69651 3483 30520 -46817 17333 14745 20897 -5001 56209 37972 -86559 -72939 52706 -11830 37601 -67695 66921 13276 26245 -26041 68594 44614 42425 60186 56553 68069 54314 -66739 -54241 -52620 -73337 63534 -57399 -77883 -7098 65204 41589 75950 -69502 89601 19256 -92504 57659 -21585 -5189 -18062 65126 25823 25325 80478 91795 -69762 -29084 -16960 96504 98879 -7168 84396 33392 5867 54453 60526 95313 -49679 -31770 82014 23498 8967 -45685 -16256 11173 -14175 -62664 26153 -82771 91799 64947 47387 72682 -97348 80531 56627 -10201 -93717 56536 60146 62725 42745 39002 -96086 90610 36466 84415 -63411 51277 16062 95919 73775 20448 -55477 28470 43280 -41308 -59966 -83457 -36549 -29201 -98349 -84411 -21052 -12913 -33502 -35068 -52089 -8894 -92355 27245 77576 29806 -32083 -82314 -83320 -68875 46006 39525 26868 -27141 -93464 85597 -559 -85796 3189 77803 -66509 35300 21437 91509 -97956 82090 -69084 25121 -87380 55916 -60081 -62801 53060 -52588 36511 39553 24363 69637 65362 6631 -79146 15738 66084 -98880 42697 -23875 8404 -13888 22877 -31864"
l = list(map(int, s.split()))   
print(insertion_sort(l))